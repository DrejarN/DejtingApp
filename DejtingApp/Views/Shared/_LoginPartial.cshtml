@using Microsoft.AspNet.Identity
@using DejtingApp.Models

@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
    @Html.AntiForgeryToken()

    <ul class="nav navbar-nav navbar-right">
        <li>
            @Html.ActionLink("Hello " + User.Identity.GetUserName() + "!", "Index", "Manage", routeValues: null, htmlAttributes: new { title = "Manage" })
        </li>
        <li><a href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
        @using (var ctx = new AppDbContext())
        {
            var usID = User.Identity.GetUserId();
            var profil = ctx.Profiles.FirstOrDefault(o => o.ApplicationUser == usID);
            if (User.Identity.GetUserId() != null)
            {
                if (profil != null) { 
                int? id = profil.ProfileId;

                int freq = ctx.FriendRequests.Count(o => o.RecieverId == id);
                <li>@Html.ActionLink("Pending Requests: " + freq, "ViewFriendRequest", "Account", new { profil.ProfileId}, null)</li>
                }
            }

        }
    </ul>
    }
}
else
{
<ul class="nav navbar-nav navbar-right">
    <li>@Html.ActionLink("Register", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>
    <li>@Html.ActionLink("Log in", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
</ul>
}
